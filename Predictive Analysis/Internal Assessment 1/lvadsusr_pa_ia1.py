# -*- coding: utf-8 -*-
"""LVADSUSR_PA_IA1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mHsRZegahc9zBbQWHLvsAWJtD_SWL2_o

**`1. Linear Regression`**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import random
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error
import warnings
warnings.filterwarnings('ignore')

data = pd.read_csv('/content/booking.csv')

print(data.shape)
print(data.columns)
print(data.describe())
print(data.dtypes)

def rand_color():
    return "#" + "".join([random.choice('0123456789ABCDEF') for _ in range(6)])

numerical_columns = data.select_dtypes(include=[np.number]).columns.tolist()
num_cols = len(numerical_columns)
num_rows = num_cols // 4
num_rows += num_cols % 4
position = range(1, num_cols + 1)

fig = plt.figure(figsize=(16, num_rows * 4))
for k, col in zip(position, numerical_columns):
    ax = fig.add_subplot(num_rows, 4, k)
    sns.distplot(data[col], color=rand_color(), ax=ax)
    ax.set_title(col)
plt.tight_layout()
plt.show()

data.isnull().sum()

data.duplicated().sum()
data = data.drop_duplicates()

X = data[['numerical_columns']]
y = data['target_column']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)

print("R-squared:", r2)
print("MSE:", mse)
print("MAE:", mae)

plt.scatter(y_test, y_pred, c='red', label='Actual')
plt.scatter(y_test, y_test, c='blue', label='Predicted')
plt.xlabel("Actual values")
plt.ylabel("Predicted values")
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='black', linestyle='-', label='Best fit line')
plt.legend()
plt.show()

"""**`2. Logistic Regression`**"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import random
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error
import warnings
warnings.filterwarnings('ignore')

data = pd.read_csv('/content/expenses.csv')

print(data.shape)
print(data.columns)
print(data.describe())
print(data.dtypes)

def rand_color():
    return "#" + "".join([random.choice('0123456789ABCDEF') for _ in range(6)])

fig = plt.figure(figsize=(16, num_rows * 4))
for k, col in zip(position, numerical_columns):
    ax = fig.add_subplot(num_rows, 4, k)
    ax.set_title(col)
plt.tight_layout()
plt.show()

